//
// Generated by CocoaPods-Keys
// on 27/10/2015
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PraisepopKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PraisepopKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PraisepopKeys *, SEL) = NULL;

  if ([key isEqualToString:@"parseAppID"]) {
    implementation = _podKeysf2a1d2ef32302300d70f83e2a3df4e78;
  }

  if ([key isEqualToString:@"parseClientKey"]) {
    implementation = _podKeys89ea18077626ea9c967643acff3abc36;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysf2a1d2ef32302300d70f83e2a3df4e78(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PraisepopKeysData[1720], PraisepopKeysData[949], PraisepopKeysData[91], PraisepopKeysData[1849], PraisepopKeysData[2360], PraisepopKeysData[2267], PraisepopKeysData[2032], PraisepopKeysData[1037], PraisepopKeysData[336], PraisepopKeysData[943], PraisepopKeysData[1569], PraisepopKeysData[511], PraisepopKeysData[684], PraisepopKeysData[2144], PraisepopKeysData[44], PraisepopKeysData[1594], PraisepopKeysData[288], PraisepopKeysData[2599], PraisepopKeysData[618], PraisepopKeysData[329], PraisepopKeysData[2370], PraisepopKeysData[2614], PraisepopKeysData[1099], PraisepopKeysData[1270], PraisepopKeysData[1611], PraisepopKeysData[408], PraisepopKeysData[1050], PraisepopKeysData[1784], PraisepopKeysData[854], PraisepopKeysData[1415], PraisepopKeysData[1667], PraisepopKeysData[798], PraisepopKeysData[1862], PraisepopKeysData[1488], PraisepopKeysData[2351], PraisepopKeysData[208], PraisepopKeysData[2099], PraisepopKeysData[1630], PraisepopKeysData[137], PraisepopKeysData[812], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys89ea18077626ea9c967643acff3abc36(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PraisepopKeysData[1149], PraisepopKeysData[1001], PraisepopKeysData[2603], PraisepopKeysData[175], PraisepopKeysData[1313], PraisepopKeysData[324], PraisepopKeysData[1670], PraisepopKeysData[2284], PraisepopKeysData[1317], PraisepopKeysData[2514], PraisepopKeysData[1147], PraisepopKeysData[1595], PraisepopKeysData[934], PraisepopKeysData[53], PraisepopKeysData[535], PraisepopKeysData[738], PraisepopKeysData[553], PraisepopKeysData[1184], PraisepopKeysData[627], PraisepopKeysData[2331], PraisepopKeysData[2185], PraisepopKeysData[1222], PraisepopKeysData[1948], PraisepopKeysData[2572], PraisepopKeysData[386], PraisepopKeysData[369], PraisepopKeysData[95], PraisepopKeysData[1425], PraisepopKeysData[167], PraisepopKeysData[1827], PraisepopKeysData[1789], PraisepopKeysData[1931], PraisepopKeysData[2382], PraisepopKeysData[1809], PraisepopKeysData[2388], PraisepopKeysData[2474], PraisepopKeysData[59], PraisepopKeysData[380], PraisepopKeysData[2241], PraisepopKeysData[396], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PraisepopKeysData[2670] = "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\\\"";

- (NSString *)description
{
  return [@{
            @"parseAppID": self.parseAppID,
            @"parseClientKey": self.parseClientKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
