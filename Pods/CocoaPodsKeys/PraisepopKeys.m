//
// Generated by CocoaPods-Keys
// on 01/11/2015
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PraisepopKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PraisepopKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PraisepopKeys *, SEL) = NULL;

  if ([key isEqualToString:@"parseAppID"]) {
    implementation = _podKeysf2a1d2ef32302300d70f83e2a3df4e78;
  }

  if ([key isEqualToString:@"parseClientKey"]) {
    implementation = _podKeys89ea18077626ea9c967643acff3abc36;
  }

  if ([key isEqualToString:@"fabricAPIKey"]) {
    implementation = _podKeys418aa4086b00c0c1f9f9274ea5fbd1ba;
  }

  if ([key isEqualToString:@"fabricBuildSecret"]) {
    implementation = _podKeys45f134ab09cafa5a3266325b415baad3;
  }

  if ([key isEqualToString:@"instaBugToken"]) {
    implementation = _podKeys73fb4eee1b11fd67690bd304e0cf0edd;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysf2a1d2ef32302300d70f83e2a3df4e78(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PraisepopKeysData[5992], PraisepopKeysData[2186], PraisepopKeysData[6380], PraisepopKeysData[3046], PraisepopKeysData[3254], PraisepopKeysData[4090], PraisepopKeysData[1361], PraisepopKeysData[699], PraisepopKeysData[1158], PraisepopKeysData[5847], PraisepopKeysData[3276], PraisepopKeysData[7427], PraisepopKeysData[6554], PraisepopKeysData[5949], PraisepopKeysData[4501], PraisepopKeysData[3527], PraisepopKeysData[6845], PraisepopKeysData[690], PraisepopKeysData[243], PraisepopKeysData[5404], PraisepopKeysData[1695], PraisepopKeysData[5787], PraisepopKeysData[5988], PraisepopKeysData[4071], PraisepopKeysData[4993], PraisepopKeysData[3391], PraisepopKeysData[5620], PraisepopKeysData[75], PraisepopKeysData[1127], PraisepopKeysData[4766], PraisepopKeysData[6007], PraisepopKeysData[3521], PraisepopKeysData[8061], PraisepopKeysData[1571], PraisepopKeysData[4967], PraisepopKeysData[4303], PraisepopKeysData[4607], PraisepopKeysData[4569], PraisepopKeysData[5397], PraisepopKeysData[7743], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys89ea18077626ea9c967643acff3abc36(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PraisepopKeysData[1649], PraisepopKeysData[6319], PraisepopKeysData[4573], PraisepopKeysData[2126], PraisepopKeysData[2786], PraisepopKeysData[6619], PraisepopKeysData[5111], PraisepopKeysData[1733], PraisepopKeysData[6497], PraisepopKeysData[3762], PraisepopKeysData[5909], PraisepopKeysData[5681], PraisepopKeysData[6230], PraisepopKeysData[5106], PraisepopKeysData[3833], PraisepopKeysData[3800], PraisepopKeysData[188], PraisepopKeysData[7530], PraisepopKeysData[3841], PraisepopKeysData[5377], PraisepopKeysData[1008], PraisepopKeysData[7596], PraisepopKeysData[2448], PraisepopKeysData[1128], PraisepopKeysData[7397], PraisepopKeysData[8034], PraisepopKeysData[3618], PraisepopKeysData[2630], PraisepopKeysData[7666], PraisepopKeysData[4055], PraisepopKeysData[6031], PraisepopKeysData[4877], PraisepopKeysData[7340], PraisepopKeysData[7900], PraisepopKeysData[2171], PraisepopKeysData[6317], PraisepopKeysData[7957], PraisepopKeysData[7807], PraisepopKeysData[4884], PraisepopKeysData[1387], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys418aa4086b00c0c1f9f9274ea5fbd1ba(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PraisepopKeysData[7987], PraisepopKeysData[6924], PraisepopKeysData[257], PraisepopKeysData[2462], PraisepopKeysData[3855], PraisepopKeysData[4144], PraisepopKeysData[1331], PraisepopKeysData[6378], PraisepopKeysData[142], PraisepopKeysData[3027], PraisepopKeysData[922], PraisepopKeysData[3292], PraisepopKeysData[7658], PraisepopKeysData[6425], PraisepopKeysData[7479], PraisepopKeysData[5155], PraisepopKeysData[532], PraisepopKeysData[5892], PraisepopKeysData[4586], PraisepopKeysData[3712], PraisepopKeysData[1584], PraisepopKeysData[2967], PraisepopKeysData[3829], PraisepopKeysData[2228], PraisepopKeysData[273], PraisepopKeysData[6367], PraisepopKeysData[1951], PraisepopKeysData[16], PraisepopKeysData[7649], PraisepopKeysData[1402], PraisepopKeysData[4123], PraisepopKeysData[6409], PraisepopKeysData[72], PraisepopKeysData[7066], PraisepopKeysData[1588], PraisepopKeysData[6383], PraisepopKeysData[3335], PraisepopKeysData[62], PraisepopKeysData[3032], PraisepopKeysData[783], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys45f134ab09cafa5a3266325b415baad3(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[65] = { PraisepopKeysData[4260], PraisepopKeysData[1458], PraisepopKeysData[5211], PraisepopKeysData[7806], PraisepopKeysData[4915], PraisepopKeysData[7416], PraisepopKeysData[1678], PraisepopKeysData[6940], PraisepopKeysData[5587], PraisepopKeysData[6607], PraisepopKeysData[4618], PraisepopKeysData[4410], PraisepopKeysData[1762], PraisepopKeysData[5389], PraisepopKeysData[4074], PraisepopKeysData[3942], PraisepopKeysData[6910], PraisepopKeysData[5269], PraisepopKeysData[7381], PraisepopKeysData[924], PraisepopKeysData[4578], PraisepopKeysData[5170], PraisepopKeysData[528], PraisepopKeysData[1630], PraisepopKeysData[7684], PraisepopKeysData[4190], PraisepopKeysData[1794], PraisepopKeysData[353], PraisepopKeysData[5343], PraisepopKeysData[6796], PraisepopKeysData[797], PraisepopKeysData[2085], PraisepopKeysData[1636], PraisepopKeysData[1097], PraisepopKeysData[3097], PraisepopKeysData[4740], PraisepopKeysData[7889], PraisepopKeysData[1977], PraisepopKeysData[5759], PraisepopKeysData[6477], PraisepopKeysData[5666], PraisepopKeysData[6300], PraisepopKeysData[5848], PraisepopKeysData[7567], PraisepopKeysData[6382], PraisepopKeysData[4974], PraisepopKeysData[231], PraisepopKeysData[1256], PraisepopKeysData[5538], PraisepopKeysData[7682], PraisepopKeysData[821], PraisepopKeysData[5991], PraisepopKeysData[3047], PraisepopKeysData[6712], PraisepopKeysData[5067], PraisepopKeysData[1062], PraisepopKeysData[6928], PraisepopKeysData[494], PraisepopKeysData[4277], PraisepopKeysData[5231], PraisepopKeysData[3764], PraisepopKeysData[4854], PraisepopKeysData[2624], PraisepopKeysData[398], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys73fb4eee1b11fd67690bd304e0cf0edd(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PraisepopKeysData[1024], PraisepopKeysData[2193], PraisepopKeysData[4756], PraisepopKeysData[7764], PraisepopKeysData[6899], PraisepopKeysData[6547], PraisepopKeysData[6802], PraisepopKeysData[2441], PraisepopKeysData[4557], PraisepopKeysData[843], PraisepopKeysData[6668], PraisepopKeysData[5393], PraisepopKeysData[698], PraisepopKeysData[7001], PraisepopKeysData[3124], PraisepopKeysData[4796], PraisepopKeysData[2835], PraisepopKeysData[3540], PraisepopKeysData[5602], PraisepopKeysData[5325], PraisepopKeysData[2391], PraisepopKeysData[2549], PraisepopKeysData[3181], PraisepopKeysData[7982], PraisepopKeysData[4221], PraisepopKeysData[2834], PraisepopKeysData[2536], PraisepopKeysData[2507], PraisepopKeysData[5206], PraisepopKeysData[5797], PraisepopKeysData[1412], PraisepopKeysData[6431], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PraisepopKeysData[8066] = "\\\"";

- (NSString *)description
{
  return [@{
            @"parseAppID": self.parseAppID,
            @"parseClientKey": self.parseClientKey,
            @"fabricAPIKey": self.fabricAPIKey,
            @"fabricBuildSecret": self.fabricBuildSecret,
            @"instaBugToken": self.instaBugToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
