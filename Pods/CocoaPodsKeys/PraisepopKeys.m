//
// Generated by CocoaPods-Keys
// on 03/11/2015
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PraisepopKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PraisepopKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PraisepopKeys *, SEL) = NULL;

  if ([key isEqualToString:@"parseAppID"]) {
    implementation = _podKeysf2a1d2ef32302300d70f83e2a3df4e78;
  }

  if ([key isEqualToString:@"parseClientKey"]) {
    implementation = _podKeys89ea18077626ea9c967643acff3abc36;
  }

  if ([key isEqualToString:@"fabricAPIKey"]) {
    implementation = _podKeys418aa4086b00c0c1f9f9274ea5fbd1ba;
  }

  if ([key isEqualToString:@"fabricBuildSecret"]) {
    implementation = _podKeys45f134ab09cafa5a3266325b415baad3;
  }

  if ([key isEqualToString:@"instaBugToken"]) {
    implementation = _podKeys73fb4eee1b11fd67690bd304e0cf0edd;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysf2a1d2ef32302300d70f83e2a3df4e78(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PraisepopKeysData[5931], PraisepopKeysData[5406], PraisepopKeysData[4072], PraisepopKeysData[7891], PraisepopKeysData[4522], PraisepopKeysData[5736], PraisepopKeysData[3657], PraisepopKeysData[7553], PraisepopKeysData[927], PraisepopKeysData[87], PraisepopKeysData[1650], PraisepopKeysData[6108], PraisepopKeysData[6822], PraisepopKeysData[1892], PraisepopKeysData[3731], PraisepopKeysData[1247], PraisepopKeysData[4094], PraisepopKeysData[777], PraisepopKeysData[5374], PraisepopKeysData[6260], PraisepopKeysData[3802], PraisepopKeysData[5673], PraisepopKeysData[3700], PraisepopKeysData[3757], PraisepopKeysData[6587], PraisepopKeysData[1272], PraisepopKeysData[8350], PraisepopKeysData[2407], PraisepopKeysData[6336], PraisepopKeysData[6328], PraisepopKeysData[6000], PraisepopKeysData[1198], PraisepopKeysData[6556], PraisepopKeysData[1419], PraisepopKeysData[7], PraisepopKeysData[451], PraisepopKeysData[599], PraisepopKeysData[2055], PraisepopKeysData[2191], PraisepopKeysData[2952], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys89ea18077626ea9c967643acff3abc36(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PraisepopKeysData[6991], PraisepopKeysData[4894], PraisepopKeysData[2852], PraisepopKeysData[1248], PraisepopKeysData[3314], PraisepopKeysData[618], PraisepopKeysData[6924], PraisepopKeysData[3483], PraisepopKeysData[5261], PraisepopKeysData[3922], PraisepopKeysData[7829], PraisepopKeysData[4603], PraisepopKeysData[8016], PraisepopKeysData[6821], PraisepopKeysData[6932], PraisepopKeysData[5561], PraisepopKeysData[2481], PraisepopKeysData[475], PraisepopKeysData[4610], PraisepopKeysData[5231], PraisepopKeysData[1971], PraisepopKeysData[4591], PraisepopKeysData[2667], PraisepopKeysData[2327], PraisepopKeysData[1077], PraisepopKeysData[7056], PraisepopKeysData[6169], PraisepopKeysData[7869], PraisepopKeysData[5293], PraisepopKeysData[388], PraisepopKeysData[3371], PraisepopKeysData[1904], PraisepopKeysData[7709], PraisepopKeysData[8000], PraisepopKeysData[6493], PraisepopKeysData[1725], PraisepopKeysData[1343], PraisepopKeysData[7207], PraisepopKeysData[6382], PraisepopKeysData[982], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys418aa4086b00c0c1f9f9274ea5fbd1ba(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PraisepopKeysData[1822], PraisepopKeysData[4935], PraisepopKeysData[3407], PraisepopKeysData[5599], PraisepopKeysData[4579], PraisepopKeysData[6724], PraisepopKeysData[884], PraisepopKeysData[6195], PraisepopKeysData[6414], PraisepopKeysData[4030], PraisepopKeysData[7896], PraisepopKeysData[3527], PraisepopKeysData[554], PraisepopKeysData[542], PraisepopKeysData[5900], PraisepopKeysData[2044], PraisepopKeysData[837], PraisepopKeysData[7705], PraisepopKeysData[2064], PraisepopKeysData[7389], PraisepopKeysData[2714], PraisepopKeysData[2291], PraisepopKeysData[6074], PraisepopKeysData[5345], PraisepopKeysData[0], PraisepopKeysData[1097], PraisepopKeysData[3165], PraisepopKeysData[4771], PraisepopKeysData[2726], PraisepopKeysData[1013], PraisepopKeysData[2132], PraisepopKeysData[2122], PraisepopKeysData[394], PraisepopKeysData[6555], PraisepopKeysData[3233], PraisepopKeysData[6337], PraisepopKeysData[7635], PraisepopKeysData[7271], PraisepopKeysData[2968], PraisepopKeysData[6892], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys45f134ab09cafa5a3266325b415baad3(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[65] = { PraisepopKeysData[5512], PraisepopKeysData[1271], PraisepopKeysData[5636], PraisepopKeysData[430], PraisepopKeysData[4307], PraisepopKeysData[224], PraisepopKeysData[898], PraisepopKeysData[1360], PraisepopKeysData[195], PraisepopKeysData[7717], PraisepopKeysData[6313], PraisepopKeysData[773], PraisepopKeysData[344], PraisepopKeysData[8335], PraisepopKeysData[6507], PraisepopKeysData[5010], PraisepopKeysData[703], PraisepopKeysData[2818], PraisepopKeysData[7406], PraisepopKeysData[8185], PraisepopKeysData[3858], PraisepopKeysData[4457], PraisepopKeysData[3204], PraisepopKeysData[5327], PraisepopKeysData[7241], PraisepopKeysData[2487], PraisepopKeysData[4648], PraisepopKeysData[1655], PraisepopKeysData[1300], PraisepopKeysData[5705], PraisepopKeysData[6395], PraisepopKeysData[8032], PraisepopKeysData[5484], PraisepopKeysData[376], PraisepopKeysData[5114], PraisepopKeysData[82], PraisepopKeysData[4960], PraisepopKeysData[2326], PraisepopKeysData[973], PraisepopKeysData[121], PraisepopKeysData[8157], PraisepopKeysData[7871], PraisepopKeysData[2736], PraisepopKeysData[3311], PraisepopKeysData[1830], PraisepopKeysData[7249], PraisepopKeysData[8166], PraisepopKeysData[5780], PraisepopKeysData[3586], PraisepopKeysData[54], PraisepopKeysData[3395], PraisepopKeysData[2509], PraisepopKeysData[6453], PraisepopKeysData[1643], PraisepopKeysData[783], PraisepopKeysData[5335], PraisepopKeysData[6044], PraisepopKeysData[2708], PraisepopKeysData[6459], PraisepopKeysData[7318], PraisepopKeysData[3234], PraisepopKeysData[7874], PraisepopKeysData[1581], PraisepopKeysData[1871], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys73fb4eee1b11fd67690bd304e0cf0edd(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PraisepopKeysData[6093], PraisepopKeysData[4584], PraisepopKeysData[1377], PraisepopKeysData[2936], PraisepopKeysData[5981], PraisepopKeysData[4931], PraisepopKeysData[8334], PraisepopKeysData[1527], PraisepopKeysData[7356], PraisepopKeysData[5030], PraisepopKeysData[3102], PraisepopKeysData[8145], PraisepopKeysData[1868], PraisepopKeysData[3068], PraisepopKeysData[2157], PraisepopKeysData[5711], PraisepopKeysData[2511], PraisepopKeysData[4023], PraisepopKeysData[1844], PraisepopKeysData[2313], PraisepopKeysData[1722], PraisepopKeysData[5124], PraisepopKeysData[5164], PraisepopKeysData[5310], PraisepopKeysData[4726], PraisepopKeysData[6975], PraisepopKeysData[2321], PraisepopKeysData[5078], PraisepopKeysData[3859], PraisepopKeysData[2573], PraisepopKeysData[738], PraisepopKeysData[225], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PraisepopKeysData[8354] = "\\\"";

- (NSString *)description
{
  return [@{
            @"parseAppID": self.parseAppID,
            @"parseClientKey": self.parseClientKey,
            @"fabricAPIKey": self.fabricAPIKey,
            @"fabricBuildSecret": self.fabricBuildSecret,
            @"instaBugToken": self.instaBugToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
