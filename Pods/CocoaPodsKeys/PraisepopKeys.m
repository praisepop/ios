//
// Generated by CocoaPods-Keys
// on 30/10/2015
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PraisepopKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PraisepopKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PraisepopKeys *, SEL) = NULL;

  if ([key isEqualToString:@"parseAppID"]) {
    implementation = _podKeysf2a1d2ef32302300d70f83e2a3df4e78;
  }

  if ([key isEqualToString:@"parseClientKey"]) {
    implementation = _podKeys89ea18077626ea9c967643acff3abc36;
  }

  if ([key isEqualToString:@"fabricAPIKey"]) {
    implementation = _podKeys418aa4086b00c0c1f9f9274ea5fbd1ba;
  }

  if ([key isEqualToString:@"fabricBuildSecret"]) {
    implementation = _podKeys45f134ab09cafa5a3266325b415baad3;
  }

  if ([key isEqualToString:@"instaBugToken"]) {
    implementation = _podKeys73fb4eee1b11fd67690bd304e0cf0edd;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysf2a1d2ef32302300d70f83e2a3df4e78(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PraisepopKeysData[8040], PraisepopKeysData[4005], PraisepopKeysData[2446], PraisepopKeysData[5103], PraisepopKeysData[7101], PraisepopKeysData[7444], PraisepopKeysData[5689], PraisepopKeysData[6065], PraisepopKeysData[1800], PraisepopKeysData[2981], PraisepopKeysData[70], PraisepopKeysData[159], PraisepopKeysData[4301], PraisepopKeysData[2343], PraisepopKeysData[6031], PraisepopKeysData[7607], PraisepopKeysData[6352], PraisepopKeysData[6227], PraisepopKeysData[5799], PraisepopKeysData[3121], PraisepopKeysData[2543], PraisepopKeysData[2598], PraisepopKeysData[1494], PraisepopKeysData[634], PraisepopKeysData[3092], PraisepopKeysData[5721], PraisepopKeysData[5995], PraisepopKeysData[2742], PraisepopKeysData[7653], PraisepopKeysData[6868], PraisepopKeysData[4598], PraisepopKeysData[5190], PraisepopKeysData[3805], PraisepopKeysData[732], PraisepopKeysData[4682], PraisepopKeysData[1474], PraisepopKeysData[4452], PraisepopKeysData[5335], PraisepopKeysData[5144], PraisepopKeysData[6829], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys89ea18077626ea9c967643acff3abc36(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PraisepopKeysData[217], PraisepopKeysData[5191], PraisepopKeysData[2499], PraisepopKeysData[6555], PraisepopKeysData[5648], PraisepopKeysData[1472], PraisepopKeysData[369], PraisepopKeysData[2073], PraisepopKeysData[1332], PraisepopKeysData[1150], PraisepopKeysData[5468], PraisepopKeysData[1463], PraisepopKeysData[3894], PraisepopKeysData[4847], PraisepopKeysData[7525], PraisepopKeysData[6934], PraisepopKeysData[7172], PraisepopKeysData[6123], PraisepopKeysData[3540], PraisepopKeysData[2702], PraisepopKeysData[4506], PraisepopKeysData[1738], PraisepopKeysData[1969], PraisepopKeysData[7657], PraisepopKeysData[822], PraisepopKeysData[7326], PraisepopKeysData[5824], PraisepopKeysData[5492], PraisepopKeysData[467], PraisepopKeysData[1701], PraisepopKeysData[2413], PraisepopKeysData[575], PraisepopKeysData[1588], PraisepopKeysData[1310], PraisepopKeysData[64], PraisepopKeysData[1187], PraisepopKeysData[4605], PraisepopKeysData[656], PraisepopKeysData[1824], PraisepopKeysData[6538], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys418aa4086b00c0c1f9f9274ea5fbd1ba(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PraisepopKeysData[5923], PraisepopKeysData[4967], PraisepopKeysData[2498], PraisepopKeysData[223], PraisepopKeysData[1927], PraisepopKeysData[1062], PraisepopKeysData[5743], PraisepopKeysData[1070], PraisepopKeysData[6410], PraisepopKeysData[7860], PraisepopKeysData[7800], PraisepopKeysData[5332], PraisepopKeysData[2162], PraisepopKeysData[6239], PraisepopKeysData[7366], PraisepopKeysData[2339], PraisepopKeysData[7097], PraisepopKeysData[5817], PraisepopKeysData[910], PraisepopKeysData[5730], PraisepopKeysData[2180], PraisepopKeysData[4840], PraisepopKeysData[5072], PraisepopKeysData[6783], PraisepopKeysData[3131], PraisepopKeysData[6163], PraisepopKeysData[4888], PraisepopKeysData[7741], PraisepopKeysData[1232], PraisepopKeysData[5532], PraisepopKeysData[1825], PraisepopKeysData[5708], PraisepopKeysData[2196], PraisepopKeysData[5088], PraisepopKeysData[7901], PraisepopKeysData[6165], PraisepopKeysData[2541], PraisepopKeysData[3536], PraisepopKeysData[7248], PraisepopKeysData[1291], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys45f134ab09cafa5a3266325b415baad3(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[65] = { PraisepopKeysData[6995], PraisepopKeysData[6292], PraisepopKeysData[330], PraisepopKeysData[6697], PraisepopKeysData[7778], PraisepopKeysData[999], PraisepopKeysData[6744], PraisepopKeysData[2546], PraisepopKeysData[921], PraisepopKeysData[7419], PraisepopKeysData[5938], PraisepopKeysData[2508], PraisepopKeysData[2827], PraisepopKeysData[1823], PraisepopKeysData[6100], PraisepopKeysData[5209], PraisepopKeysData[7500], PraisepopKeysData[5562], PraisepopKeysData[6881], PraisepopKeysData[3597], PraisepopKeysData[1578], PraisepopKeysData[4997], PraisepopKeysData[3277], PraisepopKeysData[7193], PraisepopKeysData[141], PraisepopKeysData[3132], PraisepopKeysData[2989], PraisepopKeysData[6588], PraisepopKeysData[2091], PraisepopKeysData[5443], PraisepopKeysData[856], PraisepopKeysData[3369], PraisepopKeysData[3630], PraisepopKeysData[6897], PraisepopKeysData[7549], PraisepopKeysData[567], PraisepopKeysData[6176], PraisepopKeysData[5216], PraisepopKeysData[616], PraisepopKeysData[4843], PraisepopKeysData[5855], PraisepopKeysData[5445], PraisepopKeysData[640], PraisepopKeysData[5545], PraisepopKeysData[4429], PraisepopKeysData[2951], PraisepopKeysData[609], PraisepopKeysData[2983], PraisepopKeysData[478], PraisepopKeysData[5223], PraisepopKeysData[325], PraisepopKeysData[5435], PraisepopKeysData[4253], PraisepopKeysData[559], PraisepopKeysData[3270], PraisepopKeysData[5811], PraisepopKeysData[2521], PraisepopKeysData[6833], PraisepopKeysData[4587], PraisepopKeysData[459], PraisepopKeysData[1528], PraisepopKeysData[6935], PraisepopKeysData[6143], PraisepopKeysData[4051], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys73fb4eee1b11fd67690bd304e0cf0edd(PraisepopKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PraisepopKeysData[5910], PraisepopKeysData[740], PraisepopKeysData[3124], PraisepopKeysData[684], PraisepopKeysData[6996], PraisepopKeysData[1847], PraisepopKeysData[3147], PraisepopKeysData[110], PraisepopKeysData[1387], PraisepopKeysData[5308], PraisepopKeysData[1057], PraisepopKeysData[32], PraisepopKeysData[123], PraisepopKeysData[1456], PraisepopKeysData[5305], PraisepopKeysData[5757], PraisepopKeysData[7424], PraisepopKeysData[1038], PraisepopKeysData[1692], PraisepopKeysData[5026], PraisepopKeysData[3266], PraisepopKeysData[4045], PraisepopKeysData[7869], PraisepopKeysData[2018], PraisepopKeysData[1032], PraisepopKeysData[138], PraisepopKeysData[6711], PraisepopKeysData[6496], PraisepopKeysData[8056], PraisepopKeysData[7852], PraisepopKeysData[7933], PraisepopKeysData[7877], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PraisepopKeysData[8066] = "\\\"";

- (NSString *)description
{
  return [@{
            @"parseAppID": self.parseAppID,
            @"parseClientKey": self.parseClientKey,
            @"fabricAPIKey": self.fabricAPIKey,
            @"fabricBuildSecret": self.fabricBuildSecret,
            @"instaBugToken": self.instaBugToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
